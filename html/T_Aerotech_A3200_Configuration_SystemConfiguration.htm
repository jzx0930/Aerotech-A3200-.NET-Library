
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <title>SystemConfiguration Class</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/script_prototype.js"> </script>
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/StyleUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/ElementCollection.js"> </script>
    <script type="text/javascript" src="../scripts/MemberFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script>
    <script type="text/javascript" src="../scripts/LanguageFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CookieDataStore.js"> </script>
    <meta name="file" content="T_Aerotech_A3200_Configuration_SystemConfiguration" />
    
  </head>
  <body>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="control">
      <span class="productTitle">Reference Library</span>
      <br />
      <span class="topicTitle">SystemConfiguration Class</span>
      <br />
      <div id="toolbar">
        <span id="chickenFeet">
          <a href="R_Project.htm">Namespaces</a> ► <a href="N_Aerotech_A3200_Configuration.htm">Aerotech.A3200.Configuration</a> ► <span class="selflink">SystemConfiguration</span></span>
        <span id="languageFilter">
          <select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();">
            <option value="CSharp cs">C#</option>
            <option value="VisualBasic vb">Visual Basic</option>
            <option value="ManagedCPlusPlus cpp">Visual C++</option>
          </select>
        </span>
      </div>
    </div>
    <div id="main">
      <div class="summary">Contains the configuration for the whole system</div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Declaration Syntax</div>
        <div class="sectionContent">
          <div id="syntaxSection">
            <table class="filter">
              <tr class="tabs" id="syntaxTabs">
                <td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td>
                <td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td>
                <td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td>
              </tr>
            </table>
            <div id="syntaxBlocks">
              <div class="code" x-lang="CSharp">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SystemConfiguration</span></pre>
              </div>
              <div class="code" x-lang="VisualBasic">
                <pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SystemConfiguration</span></pre>
              </div>
              <div class="code" x-lang="ManagedCPlusPlus">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">SystemConfiguration</span></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Members</div>
        <div class="sectionContent">
          <div id="allMembersSection">
            <table class="filter">
              <tr class="tabs" id="memberTabs">
                <td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td>
                <td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td>
                <td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td>
              </tr>
              <tr>
                <td class="line" colspan="2">
                  <label for="public">
                    <input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label>
                  <br />
                  <label for="protected">
                    <input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label>
                </td>
                <td class="line" colspan="2">
                  <label for="instance">
                    <input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label>
                  <br />
                  <label for="static">
                    <input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label>
                </td>
                <td class="line" colspan="2">
                  <label for="declared">
                    <input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label>
                  <br />
                  <label for="inherited">
                    <input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label>
                </td>
              </tr>
            </table>
            <table class="members" id="memberList">
              <tr>
                <th class="iconColumn">Icon</th>
                <th class="nameColumn">Member</th>
                <th class="descriptionColumn">Description</th>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_AccessControl.htm">AccessControl</a>
                </td>
                <td>
                  <div class="summary">Contains access control settings</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_AutoStart.htm">AutoStart</a>
                </td>
                <td>
                  <div class="summary">Whether to automatically initialize the A3200 on system start or not</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_Calibration.htm">Calibration</a>
                </td>
                <td>
                  <div class="summary">Contains calibration settings.</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_CncOperatorInterface.htm">CncOperatorInterface</a>
                </td>
                <td>
                  <div class="summary">Configuration of the CNC Operator Interface</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_CommunicationServiceArguments.htm">CommunicationServiceArguments</a>
                </td>
                <td>
                  <div class="summary">The arguments that will be passed to the communication service on its startup</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_CompilerOutputDirectory.htm">CompilerOutputDirectory</a>
                </td>
                <td>
                  <div class="summary">OGM file destination</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_Connection.htm">Connection</a>
                </td>
                <td>
                  <div class="summary">Contains configuration settings for client/server</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_DistanceLoggingFile.htm">DistanceLoggingFile</a>
                </td>
                <td>
                  <div class="summary">Path to the distance logging file.</div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">Equals(Object)</span>
                </td>
                <td>
                  <div class="summary">Determines whether the specified <span class="nolink">Object</span> is equal to the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_FieldbusDevices.htm">FieldbusDevices</a>
                </td>
                <td>
                  <div class="summary">
            Configuration of fieldbus devices
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; protected; instance; inherited">
                <td>
                  <img src="../icons/protmethod.gif" />
                </td>
                <td>
                  <span class="nolink">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Allows an <span class="nolink">Object</span> to attempt to free resources and perform other cleanup operations before the <span class="nolink">Object</span> is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_FireWire.htm">FireWire</a>
                </td>
                <td>
                  <div class="summary">Contains firewire settings</div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Serves as a hash function for a particular type. <span class="nolink">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span> is suitable for use in hashing algorithms and data structures like a hash table.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_HyperWire.htm">HyperWire</a>
                </td>
                <td>
                  <div class="summary">
            Gets configuration settings for the HyperWire card.
            </div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_MachineTools.htm">MachineTools</a>
                </td>
                <td>
                  <div class="summary">Contains the configuration of machine tools</div>
                  <br />
                </td>
              </tr>
              <tr data="method; protected; instance; inherited">
                <td>
                  <img src="../icons/protmethod.gif" />
                </td>
                <td>
                  <span class="nolink">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_ParameterFile.htm">ParameterFile</a>
                </td>
                <td>
                  <div class="summary">Path to the parameter file to use for initialization of the controller</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_ProgramAutomation.htm">ProgramAutomation</a>
                </td>
                <td>
                  <div class="summary">Contains the program automation settings</div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Configuration_SystemConfiguration_SMCArguments.htm">SMCArguments</a>
                </td>
                <td>
                  <div class="summary">The arguments that will be passed on the SMC on initialization</div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Returns a <span class="nolink">String</span> that represents the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
            </table>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Remarks</div>
        <div class="sectionContent">
          <p>
            		Please note that any changes will be saved right away, but will not take
            		effect until the <a href="T_Aerotech_A3200_Controller.htm">Controller</a> is <a href="M_Aerotech_A3200_Controller_Reset.htm">Reset<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>,
            		one reconnects by using <a href="M_Aerotech_A3200_Controller_Connect.htm">Connect<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>, or the PC is
            		restarted.
            		Which one will load the new settings depends on the specific setting.
            	</p>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Examples</div>
        <div class="sectionContent">
This example uses the following namespaces: 
<ul><li>Aerotech.A3200</li><li>Aerotech.A3200.Configuration</li><li>System</li><li>System.IO</li></ul><div class="code" x-lang="ManagedCPlusPlus"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual C++ </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
    try 
    {
        // Set the active parameter file path
        Controller::Configuration-&gt;ParameterFile = Path::GetFullPath("foo.prma");
        // Set the 1D calibration file path
        Controller::Configuration-&gt;Calibration-&gt;Axis1D = Path::GetFullPath("default1D.cal");
        // Set and print the Distance logging file path
        Controller::Configuration-&gt;DistanceLoggingFile = Path::GetFullPath("distance.txt");
        Console::WriteLine("Distance logging file path : {0}", Controller::Configuration-&gt;DistanceLoggingFile);
        // Print out all program automation entries
        for each (ProgramAutomationEntry^ entry in Controller::Configuration-&gt;ProgramAutomation)
        {
            Console::WriteLine("Tasks: {0}", entry-&gt;Mask);
            Console::WriteLine("Path: {0}", entry-&gt;ProgramPath);
            Console::WriteLine("Automation Mode: {0}", entry-&gt;Mode);
        }
        // Add a new program automation entry
        ProgramAutomationEntry^ newEntry = gcnew ProgramAutomationEntry(Path::GetFullPath("program.pgm"), ProgramAutomationMode::RunSilent, TaskMask::T01) ;
        Controller::Configuration-&gt;ProgramAutomation-&gt;Add(newEntry);
        // Print out a few properties of each machine tool
        for each (MachineTool^ tool in Controller::Configuration-&gt;MachineTools-&gt;MachineTools)
        {
            Console::WriteLine("Name: {0}", tool-&gt;Name);
            Console::WriteLine("Units: {0}", tool-&gt;Units);
        }
        // Force the controller to initialize to apply changes made to the active parameter file path, 1D calibration file path, and program automation
        bool alreadyRunning = Controller::IsRunning;
        Controller^ myController = Controller::Connect();
        // We only have to force a reset if we were previously running
        if(alreadyRunning) { myController-&gt;Reset(); }
    }
    catch (Exception^ ex)
    {
        Console::WriteLine("Exception occurred: {0}", ex-&gt;Message);
    }

</pre></td></tr></table></div><div class="code" x-lang="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
    
    try 
    {
        // Set the active parameter file path
        Controller.Configuration.ParameterFile = Path.GetFullPath("test.prma");
        // Set the 1D calibration file path
        Controller.Configuration.Calibration.Axis1D = Path.GetFullPath("default1D.cal");
        // Set and print the Distance logging file path
        Controller.Configuration.DistanceLoggingFile = Path.GetFullPath("distance.txt");
        Console.WriteLine("Distance logging file path: {0}", Controller.Configuration.DistanceLoggingFile);
        // Print out all program automation entries
        foreach (ProgramAutomationEntry entry in Controller.Configuration.ProgramAutomation)
        {
            Console.WriteLine("Tasks: {0}", entry.Mask);
            Console.WriteLine("Path: {0}", entry.ProgramPath);
            Console.WriteLine("Automation Mode: {0}", entry.Mode);
        }
        // Add a new program automation entry
        ProgramAutomationEntry newEntry = new ProgramAutomationEntry(Path.GetFullPath("program.pgm"), ProgramAutomationMode.RunSilent, TaskMask.T01);
        Controller.Configuration.ProgramAutomation.Add(newEntry);
        // Print out a few properties of each machine tool
        foreach (MachineTool tool in Controller.Configuration.MachineTools.MachineTools)
        {
            Console.WriteLine("Name: {0}", tool.Name);
            Console.WriteLine("Units: {0}", tool.Units);
        }
        // Force the controller to initialize to apply changes made to the active parameter file path, 1D calibration file path, and program automation
        bool alreadyRunning = Controller.IsRunning;
        Controller myController = Controller.Connect();
        // We only have to force a reset if we were previously running
        if (alreadyRunning) { myController.Reset(); }
    }
    catch(Exception ex)
    {
        Console.WriteLine("Exception occurred: {0}", ex.Message);
    }
</pre></td></tr></table></div><div class="code" x-lang="VisualBasic"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual Basic </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
    
    Try
        ' Set the active parameter file path
        Controller.Configuration.ParameterFile = Path.GetFullPath("test.prma")
        ' Set the 1D calibration file path
        Controller.Configuration.Calibration.Axis1D = Path.GetFullPath("default1D.cal")
        ' Print the Distance logging file path
        Controller.Configuration.DistanceLoggingFile = Path.GetFullPath("distance.txt")
        Console.WriteLine("Distance logging file path : {0}", Controller.Configuration.DistanceLoggingFile)
        ' Print out all program automation entries
        Dim entry As ProgramAutomationEntry
        For Each entry In Controller.Configuration.ProgramAutomation
            Console.WriteLine("Tasks: {0}", entry.Mask)
            Console.WriteLine("Path: {0}", entry.ProgramPath)
            Console.WriteLine("Automation Mode: {0}", entry.Mode)
        Next
        ' Add a new program automation entry
        Dim newEntry As New ProgramAutomationEntry(Path.GetFullPath("program.pgm"), ProgramAutomationMode.RunSilent, TaskMask.T01)
        Controller.Configuration.ProgramAutomation.Add(newEntry)
        ' Print out a few properties of each machine tool
        Dim tool As MachineTool
        For Each tool In Controller.Configuration.MachineTools.MachineTools
            Console.WriteLine("Name: {0}", tool.Name)
            Console.WriteLine("Units: {0}", tool.Units)
        Next
        ' Force the controller to initialize to apply changes made to the active parameter file path, 1D calibration file path, and program automation
        Dim alreadyRunning as Boolean = Controller.IsRunning
        Dim myController As Controller = Controller.Connect
        ' We only have to force a reset if we were previously running
        If alreadyRunning Then
            myController.Reset
        End If
    Catch ex As Exception
        Console.WriteLine("Exception occurred: {0}", ex.Message)
    End Try
</pre></td></tr></table></div></div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div>
        <div class="sectionContent">
          <table cellspacing="0" cellpadding="0">
            <tr>
              <td colspan="2">
                <span class="nolink">Object</span>
              </td>
            </tr>
            <tr>
              <td>
                <img src="../icons/LastChild.gif" />
              </td>
              <td>
                <span class="selflink">SystemConfiguration</span>
              </td>
            </tr>
          </table>
        </div>
      </div>
      <div id="footer">(c) Aerotech, Inc. All rights reserved. </div>
      <p>Assembly: <span sdata="assembly">Aerotech.A3200</span> (Module: Aerotech.A3200.dll) Version: 6.4.3.32</p>
    </div>
  </body>
</html>