
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <title>AccelerationFeedback Property </title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/script_prototype.js"> </script>
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/StyleUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/ElementCollection.js"> </script>
    <script type="text/javascript" src="../scripts/MemberFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script>
    <script type="text/javascript" src="../scripts/LanguageFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CookieDataStore.js"> </script>
    <meta name="file" content="P_Aerotech_A3200_Status_AxisDiagPacket_AccelerationFeedback" />
    
  </head>
  <body>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="control">
      <span class="productTitle">Reference Library</span>
      <br />
      <span class="topicTitle">AccelerationFeedback Property </span>
      <br />
      <div id="toolbar">
        <span id="chickenFeet">
          <a href="R_Project.htm">Namespaces</a> ► <a href="N_Aerotech_A3200_Status.htm">Aerotech.A3200.Status</a> ► <a href="T_Aerotech_A3200_Status_AxisDiagPacket.htm">AxisDiagPacket</a> ► <span class="selflink">AccelerationFeedback</span></span>
        <span id="languageFilter">
          <select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();">
            <option value="CSharp cs">C#</option>
            <option value="VisualBasic vb">Visual Basic</option>
            <option value="ManagedCPlusPlus cpp">Visual C++</option>
          </select>
        </span>
      </div>
    </div>
    <div id="main">
      <div class="summary">
            The acceleration Feedback
            </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Declaration Syntax</div>
        <div class="sectionContent">
          <div id="syntaxSection">
            <table class="filter">
              <tr class="tabs" id="syntaxTabs">
                <td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td>
                <td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td>
                <td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td>
              </tr>
            </table>
            <div id="syntaxBlocks">
              <div class="code" x-lang="CSharp">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="identifier">double</span> <span class="identifier">AccelerationFeedback</span> { <span class="keyword">get</span>; }</pre>
              </div>
              <div class="code" x-lang="VisualBasic">
                <pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">AccelerationFeedback</span> <span class="keyword">As</span> <span class="identifier">Double</span>
	<span class="keyword">Get</span></pre>
              </div>
              <div class="code" x-lang="ManagedCPlusPlus">
                <pre xml:space="preserve">
<span class="keyword">public</span>:
<span class="keyword">property</span> <span class="identifier">double</span> <span class="identifier">AccelerationFeedback</span> {
	<span class="identifier">double</span> <span class="keyword">get</span> ();
}</pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Property Value</div>
        <div class="sectionContent">
          <span class="nolink">Double</span>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Remarks</div>
        <div class="sectionContent" />
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Examples</div>
        <div class="sectionContent">
This example uses the following namespaces: 
<ul><li>Aerotech.A3200</li><li>Aerotech.A3200.Status</li><li>System</li></ul><div class="code" x-lang="ManagedCPlusPlus"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual C++ </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    try
    {
        // Connect to the controller.
        Controller^ myController = Controller::Connect();
        // Retrieve the current ControllerDiagPacket for each axis.
        ControllerDiagPacket^ controllerDiagPacket = myController-&gt;DataCollection-&gt;RetrieveDiagnostics();
        // Print out all the information we can for the first ControllerDiagPacket for Axis 0
        Console::WriteLine("Controller Information for Axis 0");
        Console::WriteLine("  Analog Input 0: {0}", controllerDiagPacket[0]-&gt;AnalogInput0);
        Console::WriteLine("  Analog Input 1: {0}", controllerDiagPacket[0]-&gt;AnalogInput1);
        Console::WriteLine("  Analog Output 0: {0}", controllerDiagPacket[0]-&gt;AnalogOutput0);
        Console::WriteLine("  Analog Output 1: {0}", controllerDiagPacket[0]-&gt;AnalogOutput1);
        Console::WriteLine("  Axis Fault: {0}", controllerDiagPacket[0]-&gt;AxisFault);
        Console::WriteLine("  Axis Name: {0}", controllerDiagPacket[0]-&gt;AxisName);
        Console::WriteLine("  Axis Status: {0}", controllerDiagPacket[0]-&gt;AxisStatus);
        Console::WriteLine("  Current Command: {0}", controllerDiagPacket[0]-&gt;CurrentCommand);
        Console::WriteLine("  Current Error: {0}", controllerDiagPacket[0]-&gt;CurrentError);
        Console::WriteLine("  Current Feedback: {0}", controllerDiagPacket[0]-&gt;CurrentFeedback);
        Console::WriteLine("  Digital Inputs: {0}", controllerDiagPacket[0]-&gt;DigitalInputs);
        Console::WriteLine("  Digital Outputs: {0}", controllerDiagPacket[0]-&gt;DigitalOutputs);
        Console::WriteLine("  External Position: {0}", controllerDiagPacket[0]-&gt;PositionFeedbackAuxiliary);
        Console::WriteLine("  Position Command: {0}", controllerDiagPacket[0]-&gt;PositionCommand);
        Console::WriteLine("  Position Error: {0}", controllerDiagPacket[0]-&gt;PositionError);
        Console::WriteLine("  Position Feedback: {0}", controllerDiagPacket[0]-&gt;PositionFeedback);
        Console::WriteLine("  Program Position Command: {0}", controllerDiagPacket[0]-&gt;ProgramPositionCommand);
        Console::WriteLine("  Program Position Error: {0}", controllerDiagPacket[0]-&gt;ProgramPositionError);
        Console::WriteLine("  Program Position Feedback: {0}", controllerDiagPacket[0]-&gt;ProgramPositionFeedback);
    }
    catch (Exception^ ex)
    {
        Console::WriteLine("Exception occurred: {0}", ex-&gt;Message);
    }

</pre></td></tr></table></div><div class="code" x-lang="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    try
    {
        // Connect to the controller.
        Controller myController = Controller.Connect();
        // Retrieve the current ControllerDiagPacket for each axis.
        ControllerDiagPacket controllerDiagPacket = myController.DataCollection.RetrieveDiagnostics();
        // Print out all the information we can for the first ControllerDiagPacket for Axis 0
        Console.WriteLine("Controller Information for Axis 0");
        Console.WriteLine("  Analog Input 0: {0}", controllerDiagPacket[0].AnalogInput0);
        Console.WriteLine("  Analog Input 1: {0}", controllerDiagPacket[0].AnalogInput1);
        Console.WriteLine("  Analog Output 0: {0}", controllerDiagPacket[0].AnalogOutput0);
        Console.WriteLine("  Analog Output 1: {0}", controllerDiagPacket[0].AnalogOutput1);
        Console.WriteLine("  Axis Fault: {0}", controllerDiagPacket[0].AxisFault);
        Console.WriteLine("  Axis Name: {0}", controllerDiagPacket[0].AxisName);
        Console.WriteLine("  Axis Status: {0}", controllerDiagPacket[0].AxisStatus);
        Console.WriteLine("  Current Command: {0}", controllerDiagPacket[0].CurrentCommand);
        Console.WriteLine("  Current Error: {0}", controllerDiagPacket[0].CurrentError);
        Console.WriteLine("  Current Feedback: {0}", controllerDiagPacket[0].CurrentFeedback);
        Console.WriteLine("  Digital Inputs: {0}", controllerDiagPacket[0].DigitalInputs);
        Console.WriteLine("  Digital Outputs: {0}", controllerDiagPacket[0].DigitalOutputs);
        Console.WriteLine("  External Position: {0}", controllerDiagPacket[0].PositionFeedbackAuxiliary);
        Console.WriteLine("  Position Command: {0}", controllerDiagPacket[0].PositionCommand);
        Console.WriteLine("  Position Error: {0}", controllerDiagPacket[0].PositionError);
        Console.WriteLine("  Position Feedback: {0}", controllerDiagPacket[0].PositionFeedback);
        Console.WriteLine("  Program Position Command: {0}", controllerDiagPacket[0].ProgramPositionCommand);
        Console.WriteLine("  Program Position Error: {0}", controllerDiagPacket[0].ProgramPositionError);
        Console.WriteLine("  Program Position Feedback: {0}", controllerDiagPacket[0].ProgramPositionFeedback);
    }
    catch (Exception ex)
    {
        Console.WriteLine("Exception occurred: {0}", ex.Message);
    }

</pre></td></tr></table></div><div class="code" x-lang="VisualBasic"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual Basic </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    Try 
        ' Connect to the controller.
        Dim myController As Controller = Controller.Connect
        ' Retrieve the current ControllerDiagPacket for each axis.
        Dim controllerDiagPacket As ControllerDiagPacket = myController.DataCollection.RetrieveDiagnostics
        ' Print out all the information we can for the first ControllerDiagPacket for Axis 0
        Console.WriteLine("Controller Information for Axis 0")
        Console.WriteLine("  Analog Input 0: {0}", controllerDiagPacket.Item(0).AnalogInput0)
        Console.WriteLine("  Analog Input 1: {0}", controllerDiagPacket.Item(0).AnalogInput1)
        Console.WriteLine("  Analog Output 0: {0}", controllerDiagPacket.Item(0).AnalogOutput0)
        Console.WriteLine("  Analog Output 1: {0}", controllerDiagPacket.Item(0).AnalogOutput1)
        Console.WriteLine("  Axis Fault: {0}", controllerDiagPacket.Item(0).AxisFault)
        Console.WriteLine("  Axis Name: {0}", controllerDiagPacket.Item(0).AxisName)
        Console.WriteLine("  Axis Status: {0}", controllerDiagPacket.Item(0).AxisStatus)
        Console.WriteLine("  Current Command: {0}", controllerDiagPacket.Item(0).CurrentCommand)
        Console.WriteLine("  Current Error: {0}", controllerDiagPacket.Item(0).CurrentError)
        Console.WriteLine("  Current Feedback: {0}", controllerDiagPacket.Item(0).CurrentFeedback)
        Console.WriteLine("  Digital Inputs: {0}", controllerDiagPacket.Item(0).DigitalInputs)
        Console.WriteLine("  Digital Outputs: {0}", controllerDiagPacket.Item(0).DigitalOutputs)
        Console.WriteLine("  External Position: {0}", controllerDiagPacket.Item(0).PositionFeedbackAuxiliary)
        Console.WriteLine("  Position Command: {0}", controllerDiagPacket.Item(0).PositionCommand)
        Console.WriteLine("  Position Error: {0}", controllerDiagPacket.Item(0).PositionError)
        Console.WriteLine("  Position Feedback: {0}", controllerDiagPacket.Item(0).PositionFeedback)
        Console.WriteLine("  Program Position Command: {0}", controllerDiagPacket.Item(0).ProgramPositionCommand)
        Console.WriteLine("  Program Position Error: {0}", controllerDiagPacket.Item(0).ProgramPositionError)
        Console.WriteLine("  Program Position Feedback: {0}", controllerDiagPacket.Item(0).ProgramPositionFeedback)
    Catch ex As Exception
        Console.WriteLine("Exception occurred: {0}", ex.Message)
    End Try

</pre></td></tr></table></div></div>
      </div>
      <div id="footer">(c) Aerotech, Inc. All rights reserved. </div>
      <p>Assembly: <span sdata="assembly">Aerotech.A3200</span> (Module: Aerotech.A3200.dll) Version: 6.4.3.32</p>
    </div>
  </body>
</html>