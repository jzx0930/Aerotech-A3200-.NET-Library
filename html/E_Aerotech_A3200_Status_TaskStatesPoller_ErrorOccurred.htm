
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <title>ErrorOccurred Event</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/script_prototype.js"> </script>
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/StyleUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/ElementCollection.js"> </script>
    <script type="text/javascript" src="../scripts/MemberFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script>
    <script type="text/javascript" src="../scripts/LanguageFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CookieDataStore.js"> </script>
    <meta name="file" content="E_Aerotech_A3200_Status_TaskStatesPoller_ErrorOccurred" />
    
  </head>
  <body>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="control">
      <span class="productTitle">Reference Library</span>
      <br />
      <span class="topicTitle">ErrorOccurred Event</span>
      <br />
      <div id="toolbar">
        <span id="chickenFeet">
          <a href="R_Project.htm">Namespaces</a> ► <a href="N_Aerotech_A3200_Status.htm">Aerotech.A3200.Status</a> ► <a href="T_Aerotech_A3200_Status_TaskStatesPoller.htm">TaskStatesPoller</a> ► <span class="selflink">ErrorOccurred</span></span>
        <span id="languageFilter">
          <select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();">
            <option value="CSharp cs">C#</option>
            <option value="VisualBasic vb">Visual Basic</option>
            <option value="ManagedCPlusPlus cpp">Visual C++</option>
          </select>
        </span>
      </div>
    </div>
    <div id="main">
      <div class="summary">
            Raised when an error occurs during retrieval of data from the controller
            </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Declaration Syntax</div>
        <div class="sectionContent">
          <div id="syntaxSection">
            <table class="filter">
              <tr class="tabs" id="syntaxTabs">
                <td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td>
                <td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td>
                <td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td>
              </tr>
            </table>
            <div id="syntaxBlocks">
              <div class="code" x-lang="CSharp">
                <pre xml:space="preserve">
<span class="keyword">public</span> event <span class="identifier">EventHandler</span>&lt;<span class="identifier">ErrorEventArgs</span>&gt; <span class="identifier">ErrorOccurred</span></pre>
              </div>
              <div class="code" x-lang="VisualBasic">
                <pre xml:space="preserve">
<span class="keyword">Public</span> Event <span class="identifier">ErrorOccurred</span> <span class="keyword">As</span> <span class="identifier">EventHandler</span>(<span class="keyword">Of</span> <span class="identifier">ErrorEventArgs</span>)</pre>
              </div>
              <div class="code" x-lang="ManagedCPlusPlus">
                <pre xml:space="preserve">
<span class="keyword">public</span>:
 <span class="keyword">event</span> <span class="identifier">EventHandler</span>&lt;<span class="identifier">ErrorEventArgs</span>^&gt;^ <span class="identifier">ErrorOccurred</span> {
	<span class="keyword">void</span> <span class="keyword">add</span> (<span class="identifier">EventHandler</span>&lt;<span class="identifier">ErrorEventArgs</span>^&gt;^ <span class="parameter">value</span>);
	<span class="keyword">void</span> <span class="keyword">remove</span> (<span class="identifier">EventHandler</span>&lt;<span class="identifier">ErrorEventArgs</span>^&gt;^ <span class="parameter">value</span>);
}</pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Value</div>
        <div class="sectionContent">
          <span class="nolink">EventHandler</span>
          <span class="languageSpecificText">
            <span class="cs">&lt;</span>
            <span class="vb">(Of </span>
            <span class="cpp">&lt;</span>
            <span class="nu">(</span>
            <span class="fs">&lt;'</span>
          </span>
          <a href="T_Aerotech_A3200_Status_ErrorEventArgs.htm">ErrorEventArgs</a>
          <span class="languageSpecificText">
            <span class="cs">&gt;</span>
            <span class="vb">)</span>
            <span class="cpp">&gt;</span>
            <span class="nu">)</span>
            <span class="fs">&gt;</span>
          </span>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Examples</div>
        <div class="sectionContent">
            This example uses the following namespaces:
            <ul><li>Aerotech.A3200</li><li>Aerotech.A3200.Status</li><li>System</li></ul><div class="code" x-lang="ManagedCPlusPlus"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual C++ </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
ref class TaskStatesPoller abstract sealed
{
    // Methods
    public:
    static void Main(array&lt;String^&gt;^ args)
    {
        try
        {
            // Connect to the controller.
            Controller^ myController = Controller::Connect();
            // Register for the NewTaskStatesArrived event, and start data collection (it is started automatically).
            myController-&gt;ControlCenter-&gt;TaskStates-&gt;NewTaskStatesArrived += gcnew EventHandler&lt;NewTaskStatesArrivedEventArgs^&gt;(NewTaskStatesArrived);
            // Register for the ErrorOccurred event to process any occurs that may occur during polling.
            myController-&gt;ControlCenter-&gt;TaskStates-&gt;ErrorOccurred += gcnew EventHandler&lt;ErrorEventArgs^&gt;(NewErrorOccurred);
        }
        catch (Exception^ ex)
        {
            Console::WriteLine("Exception occurred: {0}", ex-&gt;Message);
        }
        // Wait until enter is pressed to try to produce a task state change.
        Console::ReadLine();
    }
    public:
    static void NewErrorOccurred(Object^ sender, ErrorEventArgs^ errorEventArgs)
    {
        // Print the error that occurred while polling data.
        Console::WriteLine("Error occurred polling data: {0}", errorEventArgs-&gt;Exception-&gt;Message);
    }
    public:
    static void NewTaskStatesArrived(Object^ sender, NewTaskStatesArrivedEventArgs^ taskStates)
    {
        // Print out the current task states for task 1 and task 2
        Console::WriteLine("Task 1's State: {0}", taskStates-&gt;TaskStates[TaskId::T01]);
        Console::WriteLine("Task 2's State: {0}", taskStates-&gt;TaskStates[TaskId::T02]);
    }
};

</pre></td></tr></table></div><div class="code" x-lang="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
internal static class TaskStatesPoller
{
    // Methods
    public static void Main(string[] args)
    {
        try
        {
            // Connect to the controller.
            Controller myController = Controller.Connect();
            // Register for the NewTaskStatesArrived event, and start data collection (it is started automatically).
            myController.ControlCenter.TaskStates.NewTaskStatesArrived += new EventHandler&lt;NewTaskStatesArrivedEventArgs&gt;(TaskStatesPoller.NewTaskStatesArrived);
            // Register for the ErrorOccurred event to process any occurs that may occur during polling.
            myController.ControlCenter.TaskStates.ErrorOccurred += new EventHandler&lt;ErrorEventArgs&gt;(TaskStatesPoller.NewErrorOccurred);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Exception occurred: {0}", ex.Message);
        }
        // Wait until enter is pressed to try to produce a task state change.
        Console.ReadLine();
    }

    public static void NewErrorOccurred(object sender, ErrorEventArgs errorEventArgs)
    {
        // Print the error that occurred while polling data.
        Console.WriteLine("Error occurred polling data: {0}", errorEventArgs.Exception.Message);
    }

    public static void NewTaskStatesArrived(object sender, NewTaskStatesArrivedEventArgs taskStates)
    {
        // Print out the current task states for task 1 and task 2
        Console.WriteLine("Task 1's State: {0}", taskStates.TaskStates[TaskId.T01]);
        Console.WriteLine("Task 2's State: {0}", taskStates.TaskStates[TaskId.T02]);
    }
}

</pre></td></tr></table></div><div class="code" x-lang="VisualBasic"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual Basic </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">
Friend Class TaskStatesPoller
    ' Methods
    Public Shared Sub Main(ByVal args As String())
        Try 
            ' Connect to the controller.
            Dim myController As Controller = Controller.Connect
            ' Register for the NewTaskStatesArrived event, and start data collection (it is started automatically).
            AddHandler myController.ControlCenter.TaskStates.NewTaskStatesArrived, New EventHandler(Of NewTaskStatesArrivedEventArgs)(AddressOf TaskStatesPoller.NewTaskStatesArrived)
            ' Register for the ErrorOccurred event to process any occurs that may occur during polling.
            AddHandler myController.ControlCenter.TaskStates.ErrorOccurred, New EventHandler(Of ErrorEventArgs)(AddressOf TaskStatesPoller.NewErrorOccurred)
        Catch ex As Exception
            Console.WriteLine("Exception occurred: {0}", ex.Message)
        End Try
        ' Wait until enter is pressed to try to produce a task state change.
        Console.ReadLine
    End Sub

    Public Shared Sub NewErrorOccurred(ByVal sender As Object, ByVal errorEventArgs As ErrorEventArgs)
        ' Print the error that occurred while polling data.
        Console.WriteLine("Error occurred polling data: {0}", errorEventArgs.Exception.Message)
    End Sub

    Public Shared Sub NewTaskStatesArrived(ByVal sender As Object, ByVal taskStates As NewTaskStatesArrivedEventArgs)
        ' Print out the current task states for task 1 and task 2
        Console.WriteLine("Task 1's State: {0}", taskStates.TaskStates.Item(TaskId.T01))
        Console.WriteLine("Task 2's State: {0}", taskStates.TaskStates.Item(TaskId.T02))
    End Sub

End Class

</pre></td></tr></table></div></div>
      </div>
      <div id="footer">(c) Aerotech, Inc. All rights reserved. </div>
      <p>Assembly: <span sdata="assembly">Aerotech.A3200</span> (Module: Aerotech.A3200.dll) Version: 6.4.3.32</p>
    </div>
  </body>
</html>