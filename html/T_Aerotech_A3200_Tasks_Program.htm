
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <title>Program Class</title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/script_prototype.js"> </script>
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/StyleUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/ElementCollection.js"> </script>
    <script type="text/javascript" src="../scripts/MemberFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script>
    <script type="text/javascript" src="../scripts/LanguageFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CookieDataStore.js"> </script>
    <meta name="file" content="T_Aerotech_A3200_Tasks_Program" />
    
  </head>
  <body>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="control">
      <span class="productTitle">Reference Library</span>
      <br />
      <span class="topicTitle">Program Class</span>
      <br />
      <div id="toolbar">
        <span id="chickenFeet">
          <a href="R_Project.htm">Namespaces</a> ► <a href="N_Aerotech_A3200_Tasks.htm">Aerotech.A3200.Tasks</a> ► <span class="selflink">Program</span></span>
        <span id="languageFilter">
          <select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();">
            <option value="CSharp cs">C#</option>
            <option value="VisualBasic vb">Visual Basic</option>
            <option value="ManagedCPlusPlus cpp">Visual C++</option>
          </select>
        </span>
      </div>
    </div>
    <div id="main">
      <div class="summary">
            Represents a program running on a task
            </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Declaration Syntax</div>
        <div class="sectionContent">
          <div id="syntaxSection">
            <table class="filter">
              <tr class="tabs" id="syntaxTabs">
                <td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td>
                <td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td>
                <td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td>
              </tr>
            </table>
            <div id="syntaxBlocks">
              <div class="code" x-lang="CSharp">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Program</span></pre>
              </div>
              <div class="code" x-lang="VisualBasic">
                <pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Program</span></pre>
              </div>
              <div class="code" x-lang="ManagedCPlusPlus">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Program</span></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Members</div>
        <div class="sectionContent">
          <div id="allMembersSection">
            <table class="filter">
              <tr class="tabs" id="memberTabs">
                <td class="tab" value="all" onclick="toggleClass('memberTabs','value','all','activeTab','tab'); processSubgroup('all', 'member'); processList('memberList','filterElement','member');">All Members</td>
                <td class="tab" value="method" onclick="toggleClass('memberTabs','value','method','activeTab','tab'); processSubgroup('method','member'); processList('memberList','filterElement','member');">Methods</td>
                <td class="tab" value="property" onclick="toggleClass('memberTabs','value','property','activeTab','tab'); processSubgroup('property','member'); processList('memberList','filterElement','member');">Properties</td>
              </tr>
              <tr>
                <td class="line" colspan="2">
                  <label for="public">
                    <input id="public" type="checkbox" checked="true" onclick="toggleCheckState('public',this.checked); processList('memberList','filterElement','member');" />Public</label>
                  <br />
                  <label for="protected">
                    <input id="protected" type="checkbox" checked="true" onclick="toggleCheckState('protected',this.checked); processList('memberList','filterElement','member');" />Protected</label>
                </td>
                <td class="line" colspan="2">
                  <label for="instance">
                    <input id="instance" type="checkbox" checked="true" onclick="toggleCheckState('instance',this.checked); processList('memberList','filterElement','member');" />Instance</label>
                  <br />
                  <label for="static">
                    <input id="static" type="checkbox" checked="true" onclick="toggleCheckState('static',this.checked); processList('memberList','filterElement','member');" />Static</label>
                </td>
                <td class="line" colspan="2">
                  <label for="declared">
                    <input id="declared" type="checkbox" checked="true" onclick="toggleCheckState('declared',this.checked); processList('memberList','filterElement','member');" />Declared</label>
                  <br />
                  <label for="inherited">
                    <input id="inherited" type="checkbox" checked="true" onclick="toggleCheckState('inherited',this.checked); processList('memberList','filterElement','member');" />Inherited</label>
                </td>
              </tr>
            </table>
            <table class="members" id="memberList">
              <tr>
                <th class="iconColumn">Icon</th>
                <th class="nameColumn">Member</th>
                <th class="descriptionColumn">Description</th>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Associate.htm">Associate(String)</a>
                </td>
                <td>
                  <div class="summary">
            Associates a program loaded on the SMC to the task so that it can be executed
            </div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Tasks_Program_Associated.htm">Associated</a>
                </td>
                <td>
                  <div class="summary">
            Returns a <span class="nolink">Boolean</span> to denote whether or not a program is currently associated with the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_BufferedRun.htm">BufferedRun(String)</a>
                </td>
                <td>
                  <div class="summary">
            Executes the program in buffered mode on the task, use if program is too big for <a href="M_Aerotech_A3200_Tasks_Program_Run.htm">Run(String)</a></div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Tasks_Program_Debug.htm">Debug</a>
                </td>
                <td>
                  <div class="summary">
            Provides access to advanced program control features to aid in debugging
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">Equals(Object)</span>
                </td>
                <td>
                  <div class="summary">Determines whether the specified <span class="nolink">Object</span> is equal to the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Tasks_Program_Error.htm">Error</a>
                </td>
                <td>
                  <div class="summary">
            Returns a <a href="T_Aerotech_A3200_Status_ErrorInformation.htm">ErrorInformation</a> object which can be used to retrieve information about any errors on the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="property; public; instance; declared">
                <td>
                  <img src="../icons/pubproperty.gif" />
                </td>
                <td>
                  <a href="P_Aerotech_A3200_Tasks_Program_FileName.htm">FileName</a>
                </td>
                <td>
                  <div class="summary">
            Returns the file name of the currently executing program on the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; protected; instance; inherited">
                <td>
                  <img src="../icons/protmethod.gif" />
                </td>
                <td>
                  <span class="nolink">Finalize<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Allows an <span class="nolink">Object</span> to attempt to free resources and perform other cleanup operations before the <span class="nolink">Object</span> is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Serves as a hash function for a particular type. <span class="nolink">GetHashCode<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span> is suitable for use in hashing algorithms and data structures like a hash table.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">GetType<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_InitializeQueue.htm">InitializeQueue<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
                </td>
                <td>
                  <div class="summary">Changes the task to execute commands in queue mode</div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Load.htm">Load(String)</a>
                </td>
                <td>
                  <div class="summary">
            Compiles (if needed), loads, and associates the loaded file with the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; protected; instance; inherited">
                <td>
                  <img src="../icons/protmethod.gif" />
                </td>
                <td>
                  <span class="nolink">MemberwiseClone<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Run.htm">Run(String)</a>
                </td>
                <td>
                  <div class="summary">
            Compiles (if needed), loads, associates, and executes the loaded file on the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Start.htm">Start<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
                </td>
                <td>
                  <div class="summary">
            Starts execution of the program currently loaded on the task
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Stop.htm">Stop<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
                </td>
                <td>
                  <div class="summary">
            Stops execution of the currently loaded program.
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; declared">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <a href="M_Aerotech_A3200_Tasks_Program_Stop_1.htm">Stop(Int32)</a>
                </td>
                <td>
                  <div class="summary">
            Stops execution of the currently loaded program.
            </div>
                  <br />
                </td>
              </tr>
              <tr data="method; public; instance; inherited">
                <td>
                  <img src="../icons/pubmethod.gif" />
                </td>
                <td>
                  <span class="nolink">ToString<span class="languageSpecificText"><span class="cs">()</span><span class="vb"></span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></span>
                </td>
                <td>
                  <div class="summary">Returns a <span class="nolink">String</span> that represents the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)<br /></td>
              </tr>
            </table>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Examples</div>
        <div class="sectionContent">
This example uses the following namespaces: 
<ul><li>Aerotech.A3200</li><li>Aerotech.A3200.Status</li><li>Aerotech.A3200.Tasks</li><li>Aerotech.A3200.Exceptions</li><li>System</li><li>System.Threading</li></ul><div class="code" x-lang="ManagedCPlusPlus"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual C++ </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    try
    {
        // Initialize the connection to the A3200.
        Controller^ myController = Controller::Connect();
        // Put task into Queue mode.
        myController-&gt;Tasks[TaskId::T01]-&gt;Program-&gt;InitializeQueue();
        // Put controller into incremental mode, to guarantee each motion command is executed.
        myController-&gt;Commands-&gt;Motion-&gt;Setup-&gt;Incremental();
        // Enable the axis.
        myController-&gt;Commands[TaskId::T01]-&gt;Motion-&gt;Enable("X");
        // Load Queue with a command to perform LINEAR motion.
        for (int i = 0 ; (i &lt; 300); i++)
        {
            while (true)
            {
                try
                {
                    // Load Queue with commands.
                    myController-&gt;Commands[TaskId::T01]-&gt;Motion-&gt;Linear("X", 5, 25);
                    break;
                }
                catch (QueueBufferFullException)
                {
                    // Wait if the Queue is full.
                    Thread::Sleep(10);
                }
            }
        }
        // Collect QueueLineCount to see if there are still commands to execute.
        while (!myController-&gt;Tasks[TaskId::T01]-&gt;Status-&gt;QueueStatus-&gt;QueueBufferEmpty)
        {
            // If there are still commands to execute, sleep and then check again on how many commands are left.
            Thread::Sleep(10);
        }
        // Stop using Queue mode.
        myController-&gt;Tasks[TaskId::T01]-&gt;Program-&gt;Stop();
        Controller::Disconnect();
    }
    catch (Exception^ ex)
    {
        Console::WriteLine("Exception occurred: {0}", ex-&gt;Message);
    }

</pre></td></tr></table></div><div class="code" x-lang="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    try
    {
        // Initialize the connection to the A3200.
        Controller myController = Controller.Connect();
        // Put task into Queue mode.
        myController.Tasks[TaskId.T01].Program.InitializeQueue();
        // Put controller into incremental mode, to guarantee each motion command is executed.
        myController.Commands.Motion.Setup.Incremental();
        // Enable the axis.
        myController.Commands[TaskId.T01].Motion.Enable("X");
        // Load Queue with a command to perform LINEAR motion.
        for (int i = 0; i &lt; 300; i++)
        {
            while (true)
            {
                try
                {
                    // Load Queue with commands.
                    myController.Commands[TaskId.T01].Motion.Linear("X", 5, 25);
                    break;
                }
                catch (QueueBufferFullException)
                {
                    // Wait if the Queue is full.
                    Thread.Sleep(10);
                }
            }
        }
        // Collect QueueLineCount to see if there are still commands to execute.
        while (!myController.Tasks[TaskId.T01].Status.QueueStatus.QueueBufferEmpty)
        {
            // If there are still commands to execute, sleep and then check again on how many commands are left.
            Thread.Sleep(10);
        }
        // Stop using Queue mode.
        myController.Tasks[TaskId.T01].Program.Stop();
        Controller.Disconnect();
    }
    catch (Exception ex)
    {
        Console.WriteLine("Exception occurred: {0}", ex.Message);
    }

</pre></td></tr></table></div><div class="code" x-lang="VisualBasic"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual Basic </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    Try 
        ' Initialize the connection to the A3200.
        Dim myController As Controller = Controller.Connect
        ' Put task into Queue mode.
        myController.Tasks.Item(TaskId.T01).Program.InitializeQueue
        ' Put controller into incremental mode, to guarantee each motion command is executed.
        myController.Commands.Motion.Setup.Incremental
        ' Enable the axis.
        myController.Commands.Item(TaskId.T01).Motion.Enable("X")
        ' Load Queue with a command to perform LINEAR motion.
        Dim i As Integer
        For i = 0 To 300 - 1
            While (True)
                Try
                    'Load Queue with commands.
                    myController.Commands.Item(TaskId.T01).Motion.Linear("X", 5, 25)
                    Exit While
                Catch ex As QueueBufferFullException
                    ' Wait until buffer is not full.
                    Thread.Sleep(10)
                End Try
            End While
        Next i
        ' Collect QueueLineCount to see if there are still commands to execute.
        Do While (Not myController.Tasks.Item(TaskId.T01).Status.QueueStatus.QueueBufferEmpty)
            ' If there are still commands to execute, sleep and then check again on how many commands are left.
            Thread.Sleep(10)
        Loop
        ' Stop using Queue mode.
        myController.Tasks.Item(TaskId.T01).Program.Stop
        Controller.Disconnect
    Catch ex As Exception
        Console.WriteLine("Exception occurred: {0}", ex.Message)
    End Try

</pre></td></tr></table></div></div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Inheritance Hierarchy</div>
        <div class="sectionContent">
          <table cellspacing="0" cellpadding="0">
            <tr>
              <td colspan="2">
                <span class="nolink">Object</span>
              </td>
            </tr>
            <tr>
              <td>
                <img src="../icons/LastChild.gif" />
              </td>
              <td>
                <span class="selflink">Program</span>
              </td>
            </tr>
          </table>
        </div>
      </div>
      <div id="footer">(c) Aerotech, Inc. All rights reserved. </div>
      <p>Assembly: <span sdata="assembly">Aerotech.A3200</span> (Module: Aerotech.A3200.dll) Version: 6.4.3.32</p>
    </div>
  </body>
</html>