
<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <title>Variables Property </title>
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/script_prototype.js"> </script>
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/StyleUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/ElementCollection.js"> </script>
    <script type="text/javascript" src="../scripts/MemberFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script>
    <script type="text/javascript" src="../scripts/LanguageFilter.js"> </script>
    <script type="text/javascript" src="../scripts/CookieDataStore.js"> </script>
    <meta name="file" content="P_Aerotech_A3200_Controller_Variables" />
    
  </head>
  <body>
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="control">
      <span class="productTitle">Reference Library</span>
      <br />
      <span class="topicTitle">Variables Property </span>
      <br />
      <div id="toolbar">
        <span id="chickenFeet">
          <a href="R_Project.htm">Namespaces</a> ► <a href="N_Aerotech_A3200.htm">Aerotech.A3200</a> ► <a href="T_Aerotech_A3200_Controller.htm">Controller</a> ► <span class="selflink">Variables</span></span>
        <span id="languageFilter">
          <select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();">
            <option value="CSharp cs">C#</option>
            <option value="VisualBasic vb">Visual Basic</option>
            <option value="ManagedCPlusPlus cpp">Visual C++</option>
          </select>
        </span>
      </div>
    </div>
    <div id="main">
      <div class="summary">
            Provides access to the various variable types on the controller (such as global variables, fieldbus variables, etc.)
            </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Declaration Syntax</div>
        <div class="sectionContent">
          <div id="syntaxSection">
            <table class="filter">
              <tr class="tabs" id="syntaxTabs">
                <td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td>
                <td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td>
                <td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td>
              </tr>
            </table>
            <div id="syntaxBlocks">
              <div class="code" x-lang="CSharp">
                <pre xml:space="preserve">
<span class="keyword">public</span> <span class="identifier">ControllerVariableContainer</span> <span class="identifier">Variables</span> { <span class="keyword">get</span>; }</pre>
              </div>
              <div class="code" x-lang="VisualBasic">
                <pre xml:space="preserve">
<span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">Variables</span> <span class="keyword">As</span> <span class="identifier">ControllerVariableContainer</span>
	<span class="keyword">Get</span></pre>
              </div>
              <div class="code" x-lang="ManagedCPlusPlus">
                <pre xml:space="preserve">
<span class="keyword">public</span>:
<span class="keyword">property</span> <span class="identifier">ControllerVariableContainer</span>^ <span class="identifier">Variables</span> {
	<span class="identifier">ControllerVariableContainer</span>^ <span class="keyword">get</span> ();
}</pre>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Property Value</div>
        <div class="sectionContent">
          <a href="T_Aerotech_A3200_Variables_ControllerVariableContainer.htm">ControllerVariableContainer</a>
        </div>
      </div>
      <div class="section">
        <div class="sectionTitle" onclick="toggleSection(this.parentNode)">
          <img src="../icons/collapse_all.gif" /> Examples</div>
        <div class="sectionContent">
This example uses the following namespaces: 
<ul><li>Aerotech.A3200</li><li>System</li></ul><div class="code" x-lang="ManagedCPlusPlus"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual C++ </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    // Connect to the controller.
    Controller^ myController = Controller::Connect();
    // Set the value of $global[0] to PI
    myController-&gt;Variables-&gt;Global-&gt;Doubles[0]-&gt;Value = 3.14159265358979;
    // Read back the value that was set in $global[0]
    Console::WriteLine("Value of $global[0] : {0}", myController-&gt;Variables-&gt;Global-&gt;Doubles[0]-&gt;Value);
    // Set the value of the consecutive global variables $global[0] through $global[4]
    myController-&gt;Variables-&gt;Global-&gt;Doubles-&gt;SetMultiple(0, new double[] { 5.0, 4.0, 3.0, 2.0, 1.0 });
    // Read back the consecutive values that were set in the global variables
    array&lt;double&gt;^ values = myController-&gt;Variables-&gt;Global-&gt;Doubles-&gt;GetMultiple(0, 5);
    Console::WriteLine("Value of {{ $global[0], $global[1], $global[2], $global[3], $global[4] }} : {{ {0}, {1}, {2}, {3}, {4} }}", values[0], values[1], values[2], values[3], values[4]);
    // One can also access variables by name
    Console::WriteLine("Value of $global[0] : {0}", myController-&gt;Variables-&gt;Global["$global[0]"]-&gt;Value);
    // Print out the value of $task[0] for Task 1
    Console::WriteLine("Value of $task[0] on task 1 : {0}", myController-&gt;Variables-&gt;Tasks[1]["$task[0]"]-&gt;Value);

</pre></td></tr></table></div><div class="code" x-lang="CSharp"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>C# </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    // Connect to the controller.
    Controller myController = Controller.Connect();
    // Set the value of $global[0] to PI
    myController.Variables.Global.Doubles[0].Value = 3.1415926535897931;
    // Read back the value that was set in $global[0]
    Console.WriteLine("Value of $global[0] : {0}", myController.Variables.Global.Doubles[0].Value);
    // Set the value of the consecutive global variables $global[0] through $global[4]
    myController.Variables.Global.Doubles.SetMultiple(0, new double[] { 5.0, 4.0, 3.0, 2.0, 1.0 });
    // Read back the consecutive values that were set in the global variables
    double[] values = myController.Variables.Global.Doubles.GetMultiple(0, 5);
    Console.WriteLine("Value of {{ $global[0], $global[1], $global[2], $global[3], $global[4] }} : {{ {0}, {1}, {2}, {3}, {4} }}", values[0], values[1], values[2], values[3], values[4]);
    // One can also access variables by name
    Console.WriteLine("Value of $global[0] : {0}", myController.Variables.Global["$global[0]"].Value);
    // Print out the value of $task[0] for Task 1
    Console.WriteLine("Value of $task[0] on task 1 : {0}", myController.Variables.Tasks[1]["$task[0]"].Value);

</pre></td></tr></table></div><div class="code" x-lang="VisualBasic"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>Visual Basic </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy</span></th></tr><tr><td colspan="2"><pre xml:space="preserve">

    ' Connect to the controller.
    Dim myController As Controller = Controller.Connect
    ' Set the value of $global[0] to PI
    myController.Variables.Global.Doubles.Item(0).Value = 3.1415926535897931
    ' Read back the value that was set in $global[0]
    Console.WriteLine("Value of $global[0] : {0}", myController.Variables.Global.Doubles.Item(0).Value)
    ' Set the value of the consecutive global variables $global[0] through $global[4]
    myController.Variables.Global.Doubles.SetMultiple(0, new double[] { 5.0, 4.0, 3.0, 2.0, 1.0 });
    ' Read back the consecutive values that were set in the global variables
    Dim values As Double() = myController.Variables.Global.Doubles.GetMultiple(0, 5);
    Console.WriteLine("Value of {{ $global[0], $global[1], $global[2], $global[3], $global[4] }} : {{ {0}, {1}, {2}, {3}, {4} }}", values[0], values[1], values[2], values[3], values[4]);
    ' One can also access variables by name
    Console.WriteLine("Value of $global[0] : {0}", myController.Variables.Global.Item("$global[0]").Value)
    ' Print out the value of $task[0] for Task 1
    Console.WriteLine("Value of $task[0] on task 1 : {0}", myController.Variables.Tasks.Item(1).Item("$task[0]").Value)

</pre></td></tr></table></div></div>
      </div>
      <div id="footer">(c) Aerotech, Inc. All rights reserved. </div>
      <p>Assembly: <span sdata="assembly">Aerotech.A3200</span> (Module: Aerotech.A3200.dll) Version: 6.4.3.32</p>
    </div>
  </body>
</html>